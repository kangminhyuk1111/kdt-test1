<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <script
      src="https://cdn.socket.io/4.6.0/socket.io.min.js"
      integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+"
      crossorigin="anonymous"
    ></script>

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>

    <link rel="stylesheet" href="/static/css/index.css" />

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <title>chat</title>
  </head>
  <body>
    <div class="container-fluid">
      <h1>chat app</h1>
      <div class="row" id="main">
        <div class="col-1">Column</div>
        <div class="col-4 bg-success">
          <canvas id="canvas" width="500" height="350"></canvas>
          <div class="login">
            <button onclick="window.location.href = '/signup'">회원가입</button>
            <button onclick="userData();">가져오기</button>
          </div>
        </div>
        <div class="col-6 bg-primary">
          <div class="row h-100">
            <div class="col-1"></div>
            <div class="col-10 bg-warning h-100">
              <div class="entry-box">
                <input
                  type="text"
                  id="nickname"
                  placeholder="Nickname"
                  autofocus
                />
                <button type="button" onclick="entry();">입장</button>
              </div>

              <div class="chat-box d-none">
                <div id="chat-list" class="chat-list">
                  <p id="user-count"></p>
                </div>
                <select id="nick-list"></select
                >에게
                <input type="text" id="message" />
                <button type="button" onclick="sendMsg();">전송</button>
              </div>
              <p id="form-server"></p>
            </div>
            <div class="col-1"></div>
          </div>
        </div>
        <div class="col-1">Column</div>
      </div>
      <div class="row" id="footer">
        <div class="col">Column</div>
        <div class="col">Column</div>
      </div>
    </div>

    <!-- 채팅창 입장 안내 문구 socket.id -> nickname -->

    <script src="/static/js/index.js"></script>
    <script type="importmap">
      {
        "imports": {
          "three": "https://unpkg.com/three@0.141.0/build/three.module.js",
          "GLTFLoader": "https://unpkg.com/three@0.141.0/examples/jsm/loaders/GLTFLoader.js",
          "OrbitControls": "https://unpkg.com/three@0.142.0/examples/jsm/controls/OrbitControls.js"
        }
      }
    </script>

    <script type="module">
      import { GLTFLoader } from "GLTFLoader";
      import * as THREE from "three";
      import { OrbitControls } from "OrbitControls";

      let scene = new THREE.Scene();
      let renderer = new THREE.WebGLRenderer({
        canvas: document.querySelector("#canvas"),
        antialias: true,
      });
      renderer.outputEncoding = THREE.sRGBEncoding;

      let camera = new THREE.PerspectiveCamera(35, 1.3);
      camera.position.set(0, 0, 5);
      scene.background = new THREE.Color("white");

      const controls = new OrbitControls(camera, renderer.domElement);
      controls.update();

      let loader = new GLTFLoader();
      loader.load("/static/shiba/scene.gltf", function (gltf) {
        scene.add(gltf.scene);

        function animate() {
          requestAnimationFrame(animate);
          const canvas = document.querySelector("#canvas");
          gltf.scene.rotation.y += 0.003;
          controls.update();
          renderer.render(scene, camera);
        }
        animate();
      });

      renderer.render(scene);
    </script>
  </body>
</html>
